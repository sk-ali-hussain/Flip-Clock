@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@700&display=swap');

:root {
    --background-color: linear-gradient(45deg, #e0e0e0, #f5f5f5);
    --clock-bg: #fff;
    --digit-color: #333;
    --shadow-color: rgba(0, 0, 0, 0.1);
    --glow-color: rgba(0, 0, 0, 0.3);
    --panel-bg: rgba(255, 255, 255, 0.3);
    --border-color: rgba(0, 0, 0, 0.1);
    --clock-width: 100px;
    --clock-height: 150px;
    --font-size: 100px;
    --colon-size: 100px;
    --vh: 1vh;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    width: 100%;
    height: 100%;
}

body {
    font-family: 'Roboto Mono', monospace;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100);
    background: var(--background-color);
    color: var(--digit-color);
    overflow: hidden;
    transition: background 0.5s ease, color 0.5s ease;
}

/* Dark mode - this is now the default class-based approach */
body.dark-mode {
    --background-color: linear-gradient(45deg, #111, #222);
    --clock-bg: #333;
    --digit-color: #fff;
    --shadow-color: rgba(0, 0, 0, 0.3);
    --glow-color: rgba(255, 255, 255, 0.5);
    --panel-bg: rgba(0, 0, 0, 0.1);
    --border-color: rgba(255, 255, 255, 0.1);
}

.clock-container {
    perspective: 1000px;
    padding: 30px;
    position: relative;
    transition: transform 0.5s ease, filter 0.5s ease;
    transform-style: preserve-3d;
    filter: drop-shadow(0 30px 20px rgba(0, 0, 0, 0.2));
}

.clock-container::before {
    content: '';
    position: absolute;
    top: -30px;
    left: -30px;
    right: -30px;
    bottom: -30px;
    background: var(--panel-bg);
    border-radius: 30px;
    backdrop-filter: blur(10px);
    z-index: -1;
    transition: background 0.5s ease;
    transform: translateZ(-10px);
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
}

.clock {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    transform-style: preserve-3d;
    transform: rotateX(10deg);
}

.hours, .minutes, .seconds {
    display: flex;
    gap: 8px;
    transform-style: preserve-3d;
}

.first, .second {
    position: relative;
    width: var(--clock-width);
    height: var(--clock-height);
    background: var(--clock-bg);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 15px 30px var(--shadow-color);
    border: 1px solid var(--border-color);
    transition: background 0.5s ease, box-shadow 0.5s ease, border 0.5s ease;
    transform-style: preserve-3d;
    transform: translateZ(10px);
}

.first::before, .second::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, var(--border-color), transparent);
    transition: background 0.5s ease;
}

.first::after, .second::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(0, 0, 0, 0.2), transparent);
}

.number {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--font-size);
    background: var(--clock-bg);
    color: var(--digit-color);
    transition: transform 0.5s, background 0.5s ease, color 0.5s ease, text-shadow 0.5s ease;
    text-shadow: 0 0 5px var(--glow-color);
    transform-style: preserve-3d;
}

.colon {
    font-size: var(--colon-size);
    line-height: var(--clock-height);
    color: var(--digit-color);
    text-shadow: 0 0 10px var(--glow-color);
    animation: pulse 1s infinite;
    transition: color 0.5s ease, text-shadow 0.5s ease;
    transform: translateZ(10px);
}

@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
}

.flip {
    animation: flip 0.5s ease-in-out forwards;
    transform-origin: bottom center;
    transform-style: preserve-3d;
}

@keyframes flip {
    0% {
        transform: rotateX(0deg);
        background: var(--clock-bg);
    }
    50% {
        transform: rotateX(-90deg);
        background: #444;
    }
    100% {
        transform: rotateX(0deg);
        background: var(--clock-bg);
    }
}

/* Theme toggle button */
.theme-toggle {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: transparent;
    border: 2px solid var(--border-color);
    color: var(--digit-color);
    font-size: 28px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 10;
    opacity: 0.7;
    transform: translateZ(20px);
    box-shadow: 0 5px 15px var(--shadow-color);
}

.theme-toggle:hover {
    opacity: 1;
    background: rgba(255, 255, 255, 0.1);
    transform: translateZ(25px);
}

.theme-toggle:active {
    transform: translateZ(15px);
}

/* Midnight special effect */
.midnight-effect {
    animation: midnight 3s ease-in-out;
}

@keyframes midnight {
    0% {
        filter: brightness(1);
    }
    15% {
        filter: brightness(3) hue-rotate(180deg);
    }
    30% {
        filter: brightness(1);
    }
    45% {
        filter: brightness(3) hue-rotate(90deg);
    }
    60% {
        filter: brightness(1);
    }
    75% {
        filter: brightness(3) hue-rotate(270deg);
    }
    100% {
        filter: brightness(1);
    }
}

/* Light mode */
body.light-mode {
    --background-color: linear-gradient(45deg, #e0e0e0, #f5f5f5);
    --clock-bg: #fff;
    --digit-color: #333;
    --shadow-color: rgba(0, 0, 0, 0.1);
    --glow-color: rgba(0, 0, 0, 0.3);
    --panel-bg: rgba(255, 255, 255, 0.3);
    --border-color: rgba(0, 0, 0, 0.1);
}

/* Responsive design */
@media (max-width: 800px) {
    :root {
        --clock-width: 70px;
        --clock-height: 110px;
        --font-size: 70px;
        --colon-size: 70px;
    }
    
    .clock {
        transform: rotateX(5deg);
    }
}

@media (max-width: 600px) {
    :root {
        --clock-width: 60px;
        --clock-height: 90px;
        --font-size: 60px;
        --colon-size: 60px;
    }
    
    .theme-toggle {
        width: 40px;
        height: 40px;
        font-size: 22px;
    }
    
    .clock-container {
        padding: 20px;
    }
    
    .clock-container::before {
        top: -20px;
        left: -20px;
        right: -20px;
        bottom: -20px;
        border-radius: 20px;
    }
    
    .clock {
        transform: rotateX(3deg);
    }
}

@media (max-width: 480px) {
    .clock {
        flex-wrap: wrap;
        justify-content: center;
        transform: rotateX(0deg);
    }
    
    .hours, .minutes, .seconds {
        margin: 5px 0;
    }
    
    .colon {
        display: none;
    }
}

@media (max-width: 400px) {
    :root {
        --clock-width: 45px;
        --clock-height: 70px;
        --font-size: 45px;
        --colon-size: 45px;
    }
    
    .theme-toggle {
        width: 30px;
        height: 30px;
        font-size: 18px;
    }
    
    .clock-container {
        padding: 15px;
    }
    
    .clock-container::before {
        top: -15px;
        left: -15px;
        right: -15px;
        bottom: -15px;
        border-radius: 15px;
    }
}

/* For very small screens */
@media (max-width: 350px) {
    :root {
        --clock-width: 40px;
        --clock-height: 60px;
        --font-size: 40px;
    }
    
    .hours, .minutes, .seconds {
        gap: 5px;
    }
}

/* Mobile orientation handling */
@media (max-height: 500px) and (orientation: landscape) {
    .clock {
        transform: scale(0.8) rotateX(5deg);
    }
}

/* Dark mode / Light mode toggle based on system preference - this is a fallback only */
@media (prefers-color-scheme: light) {
    body:not(.light-mode):not(.dark-mode) {
        --background-color: linear-gradient(45deg, #e0e0e0, #f5f5f5);
        --clock-bg: #fff;
        --digit-color: #333;
        --shadow-color: rgba(0, 0, 0, 0.1);
        --glow-color: rgba(0, 0, 0, 0.3);
        --panel-bg: rgba(255, 255, 255, 0.3);
        --border-color: rgba(0, 0, 0, 0.1);
    }
} 